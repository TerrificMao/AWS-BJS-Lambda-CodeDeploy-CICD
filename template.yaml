AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: 'Serverless CI/CD webinar Demo'
Resources:
  lambdaCodeDeployDemo:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambdaCodeDeployDemo/index.handler
      Runtime: nodejs6.10
      Description: 'Serverless CI/CD webinar demo Lambda function'
      MemorySize: 128
      Timeout: 15
      
      Events:
        LambdaMicroservice:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
      AutoPublishAlias: live
      DeploymentPreference:
        # https://docs.aws.amazon.com/lambda/latest/dg/automating-updates-to-serverless-apps.html
        # Type: Canary10Percent5Minutes
        # Type: Canary10Percent10Minutes
        # Type: Canary10Percent15Minutes
        # Type: Canary10Percent30Minutes
        # Type: Linear10PercentEvery1Minute 
        # Type: Linear10PercentEvery2Minute 
        # Type: Linear10PercentEvery3Minute 
        # Type: Linear10PercentEvery10Minute 
        Type: AllAtOnce
        Alarms:
          #- APIGTooMany4XXError
          - !Ref APIGTooMany4XXErrorAlarm
          # A list of alarms that you want to monitor
          # - !Ref AliasErrorMetricGreaterThanZeroAlarm
          # - !Ref LatestVersionErrorMetricGreaterThanZeroAlarm
        # Hooks:
          # # Validation Lambda functions that are run before & after traffic shifting
          # PreTraffic: !Ref PreTrafficLambdaFunction
          # PostTraffic: !Ref PostTrafficLambdaFunction      
  
  APIGTooMany4XXErrorAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      ActionsEnabled: true
      # AlarmActions:
      #   - String
      AlarmDescription: 'APIG Too Many 4XX Error Alarm'
      AlarmName:
        'Fn::Sub': 'APIGTooMany4XXError-${AWS::StackName}'
      ComparisonOperator: 'GreaterThanOrEqualToThreshold'
      Dimensions:
        - 
          Name: 'ApiName'
          Value: 
            'Fn::Sub': '${AWS::StackName}'
        -
          Name: 'Stage'
          Value: 'Prod'
      # EvaluateLowSampleCountPercentile: String
      EvaluationPeriods: "1"
      # ExtendedStatistic: String
      # InsufficientDataActions:
      #   - String
      MetricName: '4XXError'
      Namespace: 'AWS/ApiGateway'
      # OKActions:
      #   - String
      Period: '60'
      Statistic: 'Sum'
      Threshold: '1'
      TreatMissingData: 'notBreaching'
      Unit: 'Count'    
Outputs:
  TestVersionUrl:
    Description: "Test Version URL"
    Value: 
      'Fn::Sub': "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/version"
  Test4XXUrl:
    Description: "Test 4XX error URL"
    Value: 
      'Fn::Sub': "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/return400"